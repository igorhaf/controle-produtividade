import json
import oracledb
import os

# Lista para armazenar as propriedades
propriedades = []

# Fun√ß√£o para adicionar uma propriedade rural
def adicionar_propriedade(nome, hectares_plantados, toneladas_colhidas, toneladas_perdidas):
    propriedade = {
        'nome': nome,
        'hectares_plantados': hectares_plantados,
        'toneladas_colhidas': toneladas_colhidas,
        'toneladas_perdidas': toneladas_perdidas,
        'percentual_perda': calcular_perda(toneladas_colhidas, toneladas_perdidas)
    }
    propriedades.append(propriedade)

# Fun√ß√£o para calcular percentual de perda
def calcular_perda(colhidas, perdidas):
    if colhidas + perdidas == 0:
        return 0.0
    return round((perdidas / (colhidas + perdidas)) * 100, 2)

# Fun√ß√£o para salvar os dados em um arquivo JSON
def salvar_json(caminho_arquivo):
    with open(caminho_arquivo, 'w', encoding='utf-8') as f:
        json.dump(propriedades, f, indent=4, ensure_ascii=False)

# Fun√ß√£o para conectar e inserir no banco Oracle
def inserir_banco(usuario, senha, dsn):
    try:
        connection = oracledb.connect(user=usuario, password=senha, dsn=dsn)
        cursor = connection.cursor()
        
        cursor.execute('''
            BEGIN
                EXECUTE IMMEDIATE '
                CREATE TABLE propriedades (
                    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
                    nome VARCHAR2(100),
                    hectares_plantados NUMBER,
                    toneladas_colhidas NUMBER,
                    toneladas_perdidas NUMBER,
                    percentual_perda NUMBER,
                    PRIMARY KEY (id)
                )';
            EXCEPTION
                WHEN OTHERS THEN
                    IF SQLCODE != -955 THEN
                        RAISE;
                    END IF;
            END;
        ''')
        connection.commit()

        for propriedade in propriedades:
            cursor.execute('''
                INSERT INTO propriedades (nome, hectares_plantados, toneladas_colhidas, toneladas_perdidas, percentual_perda)
                VALUES (:1, :2, :3, :4, :5)
            ''', (
                propriedade['nome'],
                propriedade['hectares_plantados'],
                propriedade['toneladas_colhidas'],
                propriedade['toneladas_perdidas'],
                propriedade['percentual_perda']
            ))
        connection.commit()
        print("Dados inseridos no banco com sucesso!")
    except Exception as e:
        print(f"Erro ao inserir no banco: {e}")

# Fun√ß√£o principal para usar o sistema
def menu():
    while True:
        print("\nControle de Perdas na Colheita de Cana-de-A√ß√∫car")
        print("1. Adicionar Propriedade")
        print("2. Salvar Dados em JSON")
        print("3. Enviar Dados para Banco Oracle")
        print("4. Listar Propriedades")
        print("5. Sair")
        escolha = input("Escolha uma op√ß√£o: ")

        if escolha == '1':
            nome = input("Nome da Propriedade: ")
            try:
                hectares = float(input("Hectares Plantados: "))
                colhidas = float(input("Toneladas Colhidas: "))
                perdidas = float(input("Toneladas Perdidas: "))
                adicionar_propriedade(nome, hectares, colhidas, perdidas)
                print("‚úÖ Propriedade adicionada!")
            except ValueError:
                print("‚ùå Erro: Digite valores num√©ricos v√°lidos!")

        elif escolha == '2':
            salvar_json('propriedades.json')
            print("‚úÖ Dados salvos em propriedades.json!")

        elif escolha == '3':
            usuario = os.getenv('ORACLE_USER')
            senha = os.getenv('ORACLE_PASSWORD')
            dsn = os.getenv('ORACLE_DSN')
            if usuario and senha and dsn:
                inserir_banco(usuario, senha, dsn)
            else:
                print("‚ùå Vari√°veis de ambiente para Oracle n√£o configuradas.")

        elif escolha == '4':
            if propriedades:
                for prop in propriedades:
                    print(f"üè° {prop['nome']} - Perda: {prop['percentual_perda']}%")
            else:
                print("‚ö†Ô∏è Nenhuma propriedade cadastrada.")

        elif escolha == '5':
            print("üëã Saindo...")
            break
        else:
            print("‚ùå Op√ß√£o inv√°lida!")

# Iniciar o menu
if __name__ == "__main__":
    menu()

